# Generated by Django 4.2.13 on 2024-07-15 13:22

import digitalSociety.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("digitalSociety", "0008_requests_delete_renewalrequests"),
    ]

    operations = [
        migrations.CreateModel(
            name="Properties",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("property_id", models.CharField(max_length=30)),
                ("location", models.CharField(max_length=30)),
                (
                    "property_type",
                    models.CharField(
                        choices=[
                            ("Residential", "Residential"),
                            ("Commercial", "Commercial"),
                            ("Industrial", "Industrial"),
                            ("Agricultural", "Agricultural"),
                            ("Land", "Land"),
                            ("Intellectual", "Intellectual"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField()),
                ("size", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "picture",
                    models.ImageField(upload_to=digitalSociety.models.property_path),
                ),
                ("is_under_transfer", models.BooleanField(default=False)),
                (
                    "citizen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="digitalSociety.citizens",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RegistrationRequests",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "request_type",
                    models.CharField(
                        choices=[
                            ("Address Registration", "Address Registration"),
                            ("Property Registration", "Property Registration"),
                            ("Vehicle Registration", "Vehicle Registration"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "proof_document",
                    models.FileField(
                        upload_to=digitalSociety.models.proof_document_path
                    ),
                ),
                ("previous_owner_id", models.CharField(max_length=30)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                        ],
                        default="Pending",
                        max_length=30,
                    ),
                ),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "citizen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="digitalSociety.citizens",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RenewalRequests",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "request_type",
                    models.CharField(
                        choices=[
                            ("Passport", "Passport"),
                            ("Driver's License", "Driver's License"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "picture",
                    models.ImageField(
                        upload_to=digitalSociety.models.request_picture_path
                    ),
                ),
                ("reason", models.TextField()),
                (
                    "proof_document",
                    models.FileField(
                        upload_to=digitalSociety.models.proof_document_path
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                        ],
                        default="Pending",
                        max_length=30,
                    ),
                ),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "citizen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="digitalSociety.citizens",
                    ),
                ),
            ],
        ),
        migrations.DeleteModel(name="Requests",),
    ]
